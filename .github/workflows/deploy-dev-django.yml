name: Deploy django to develop stage

on:
  push:
    branches:
      - develop
      - Issue-*
    paths:
      - .github/workflows/deploy-dev-django.yml
      - django/Dockerfile
      - django/Pipfile.lock
      - django/ecs/dev/django-task-definition.json
      - django/src/**

jobs:
  build:
    #needs: 
    #  - test
    runs-on: ubuntu-latest
    env:
      WORKDIR: ./django
      DOCKER_IMAGE: docker.pkg.github.com/${{ env.GITHUB_REPOSITORY }}/django:dev
      IMAGE_NAME: ghilbut/byfs

    steps:
      - uses: actions/checkout@v2

      - name: Build the tagged Docker image
        run: |
          docker build \
                 -t ${DOCKER_IMAGE} \
                 --label GITHUB_REF=${GITHUB_REF} \
                 --label GITHUB_SHA=${GITHUB_SHA} \
                 .
        working-directory: ${{ env.WORKDIR }}

      - name: Login to push to github packages
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
      - name: Push docker image to github packages
        run: docker push ${DOCKER_IMAGE}

  #test:
  #  runs-on: ubuntu-latest

  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Set up Python 3.8
  #      uses: actions/setup-python@v1
  #      with:
  #        python-version: 3.8
  #    - name: Install dependencies
  #      run: |
  #        sudo apt-get install libmariadb-dev \
  #        && pipenv install --system --deploy --clear


  deploy:
    needs:
      - build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Login to pull from github packages
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login -u ${GITHUB_ACTOR} --password-stdin docker.pkg.github.com
      - name: Pull docker image from github packages
        run: docker pull ${DOCKER_IMAGE}

      - id: docker
        name: Make docker image tag to publish to docker hub
        run: echo ::set-output name=image::${IMAGE_NAME}:$(date +'%Y%m%d%H%M%S')

      - name: Tag the latest to current Docker image
        run: docker image tag ${DOCKER_IMAGE} ${{ steps.docker.outputs.image }}

      - name: Login to push to docker-hub registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Push the tagged Docker image
        run: docker push ${{ steps.docker.outputs.image }}
      - name: Push the latest Docker image
        run: docker push ${IMAGE_NAME}:latest

      - name: Checkout
        run: docker pull ${{ steps.docker.outputs.image }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.BYFS_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.BYFS_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.BYFS_AWS_REGION }}

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: django/ecs/dev/django-task-definition.json
          container-name: django
          image: ${{ steps.docker.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: byfs-dev-django
          cluster: byfs
          wait-for-service-stability: true
